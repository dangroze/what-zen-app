{"ast":null,"code":"import _classCallCheck from \"/Users/david/Desktop/projects/final_project_weeks/what-zen-app/what-zen/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/Desktop/projects/final_project_weeks/what-zen-app/what-zen/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/Desktop/projects/final_project_weeks/what-zen-app/what-zen/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/Desktop/projects/final_project_weeks/what-zen-app/what-zen/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/Desktop/projects/final_project_weeks/what-zen-app/what-zen/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/david/Desktop/projects/final_project_weeks/what-zen-app/what-zen/src/components/CardList/index.js\";\nimport React, { Component } from 'react';\nimport Card from '../Card';\nimport _ from 'lodash';\nimport app from 'firebase/app';\nimport CardDetailsForm from '../CardDetailsForm';\nimport Popup from 'reactjs-popup';\n\nvar CardList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardList, _Component);\n\n  function CardList(props) {\n    var _this;\n\n    _classCallCheck(this, CardList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardList).call(this, props));\n\n    _this.deleteCard = function (card) {\n      app.database().ref('cards').child(card.key).remove();\n    };\n\n    _this.nextStage = function (card) {\n      var appl = app.database().ref('cards');\n\n      if (card.status === 'To do') {\n        appl.child(card.key).update({\n          status: 'Doing'\n        });\n      } else {\n        appl.child(card.key).update({\n          status: 'Done'\n        });\n      }\n\n      ;\n    };\n\n    _this.previousStage = function (card) {\n      var appl = app.database().ref('cards');\n\n      if (card.status === 'Done') {\n        appl.child(card.key).update({\n          status: 'Doing'\n        });\n      } else {\n        appl.child(card.key).update({\n          status: 'To do'\n        });\n      }\n\n      ;\n    };\n\n    _this.state = {\n      cards: []\n    };\n    app.database().ref('cards').on('value', function (snapshot) {\n      _this.getData(snapshot.val());\n    });\n    return _this;\n  }\n\n  _createClass(CardList, [{\n    key: \"getData\",\n    value: function getData(values) {\n      var cardsVal = values;\n\n      var cards = _(cardsVal).keys().map(function (cardKey) {\n        console.log(cardsVal);\n\n        var cloned = _.clone(cardsVal[cardKey]);\n\n        console.log(cloned);\n        cloned.key = cardKey;\n        return cloned;\n      }).value();\n\n      this.setState({\n        cards: cards\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cardNodes = this.state.cards.map(function (card) {\n        if (card.status === _this2.props.status) {\n          return React.createElement(\"div\", {\n            className: \"card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, React.createElement(Card, {\n            card: card.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }), card.status !== 'To do' ? React.createElement(\"button\", {\n            className: \"button is-small\",\n            value: card,\n            onClick: function onClick() {\n              return _this2.previousStage(card);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, \" \", '<', \" \") : null, card.status !== 'Done' ? React.createElement(\"button\", {\n            className: \"button is-small\",\n            value: card,\n            onClick: function onClick() {\n              return _this2.nextStage(card);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, \" \", '>', \" \") : null, React.createElement(Popup, {\n            trigger: React.createElement(\"button\", {\n              className: \"button is-small\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83\n              },\n              __self: this\n            }, \"+\"),\n            position: \"right center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, React.createElement(CardDetailsForm, {\n            card: card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          })), React.createElement(\"button\", {\n            className: \"button is-small\",\n            value: card,\n            onClick: function onClick() {\n              return _this2.deleteCard(card);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, \"x\")));\n        }\n\n        return null;\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \" \", this.props.status, \" \"), cardNodes);\n    }\n  }]);\n\n  return CardList;\n}(Component);\n\nexport default CardList;","map":{"version":3,"sources":["/Users/david/Desktop/projects/final_project_weeks/what-zen-app/what-zen/src/components/CardList/index.js"],"names":["React","Component","Card","_","app","CardDetailsForm","Popup","CardList","props","deleteCard","card","database","ref","child","key","remove","nextStage","appl","status","update","previousStage","state","cards","on","snapshot","getData","val","values","cardsVal","keys","map","cardKey","console","log","cloned","clone","value","setState","cardNodes","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Card from '../Card';\nimport _ from 'lodash';\nimport app from 'firebase/app';\nimport CardDetailsForm from '../CardDetailsForm';\nimport Popup from 'reactjs-popup';\n\nclass CardList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: [],\n\n    };\n    app.database().ref('cards').on('value', snapshot => {\n      this.getData(snapshot.val());\n    });\n  }\n\n  getData(values){\n    let cardsVal = values;\n    let cards = _(cardsVal)\n      .keys()\n      .map(cardKey => {\n        console.log(cardsVal)\n        let cloned = _.clone(cardsVal[cardKey]);\n        console.log(cloned)\n        cloned.key = cardKey;\n        return cloned\n        ;\n      })\n      .value();\n    this.setState({\n      cards: cards\n    });\n  }\n\n  deleteCard = (card)=> {\n    app.database().ref('cards').child(card.key).remove()\n  }\n\n  nextStage = (card)=> {\n    let appl = app.database().ref('cards')\n    if (card.status === 'To do') {\n      appl.child(card.key).update({\n        status: 'Doing'\n      }) } else {\n        appl.child(card.key).update({\n          status: 'Done'\n        });\n      };\n  };\n\n  previousStage = (card)=> {\n    let appl = app.database().ref('cards')\n    if (card.status === 'Done') {\n      appl.child(card.key).update({\n        status: 'Doing'\n      }) } else {\n        appl.child(card.key).update({\n          status: 'To do'\n        });\n      };\n  };\n\n  render(){\n    let cardNodes = this.state.cards.map((card) => {\n      if (card.status === this.props.status) {\n        return (\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <Card card = {card.title}/>\n            \n              { ( card.status !== 'To do' ) ?\n                <button className=\"button is-small\" value={card} onClick={()=>this.previousStage(card)}> {'<'} </button>\n                  : null\n              } \n               { ( card.status !== 'Done' ) ?\n                <button className=\"button is-small\" value={card} onClick={()=>this.nextStage(card)}> {'>'} </button>\n                  : null\n              } \n              <Popup  trigger={<button className=\"button is-small\">+</button>} position=\"right center\">\n                <CardDetailsForm card = {card}/>\n              </Popup>\n              <button className=\"button is-small\" value={card} onClick={()=>this.deleteCard(card)}>x</button>\n\n            </div>\n          </div>\n        )\n      } return null\n    })\n    return (\n      <div>\n        <div> {this.props.status} </div>\n        {cardNodes}\n      </div>\n    )\n  }\n}\n\nexport default CardList\n"]},"metadata":{},"sourceType":"module"}