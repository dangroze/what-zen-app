{"ast":null,"code":"import _classCallCheck from \"/Users/david/Desktop/projects/final_project_weeks/what-zen-app/what-zen/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/david/Desktop/projects/final_project_weeks/what-zen-app/what-zen/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/david/Desktop/projects/final_project_weeks/what-zen-app/what-zen/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/david/Desktop/projects/final_project_weeks/what-zen-app/what-zen/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/david/Desktop/projects/final_project_weeks/what-zen-app/what-zen/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/david/Desktop/projects/final_project_weeks/what-zen-app/what-zen/src/components/CardList/index.js\";\nimport React, { Component } from 'react';\nimport Card from '../Card';\nimport _ from 'lodash';\nimport app from 'firebase/app';\n\nvar CardList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardList, _Component);\n\n  function CardList(props) {\n    var _this;\n\n    _classCallCheck(this, CardList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardList).call(this, props));\n\n    _this.deleteCard = function (card) {\n      app.database().ref('cards').child(card.key).remove();\n    };\n\n    _this.nextStage = function (card) {\n      var appl = app.database().ref('cards');\n\n      if (card.state === 'To do') {\n        appl.child(card.key).update({\n          state: 'Doing'\n        });\n      } else {\n        appl.child(card.key).update({\n          state: 'Done'\n        });\n      }\n\n      ;\n    };\n\n    _this.state = {\n      cards: []\n    };\n    app.database().ref('cards').on('value', function (snapshot) {\n      _this.getData(snapshot.val());\n    });\n    return _this;\n  }\n\n  _createClass(CardList, [{\n    key: \"getData\",\n    value: function getData(values) {\n      var cardsVal = values;\n\n      var cards = _(cardsVal).keys().map(function (cardKey) {\n        var cloned = _.clone(cardsVal[cardKey]);\n\n        cloned.key = cardKey;\n        return cloned;\n      }).value();\n\n      this.setState({\n        cards: cards\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cardNodes = this.state.cards.map(function (card) {\n        if (card.state === _this2.props.state) {\n          return React.createElement(\"div\", {\n            className: \"card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(Card, {\n            card: card.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }), card.state !== 'Done' ? React.createElement(\"button\", {\n            value: card,\n            onClick: function onClick() {\n              return _this2.nextStage(card);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, \"Next Stage\") : null, \" \", React.createElement(\"button\", {\n            value: card,\n            onClick: function onClick() {\n              return _this2.deleteCard(card);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, \"Delete\")));\n        }\n\n        return null;\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \" \", this.props.state, \" \"), cardNodes);\n    }\n  }]);\n\n  return CardList;\n}(Component);\n\nexport default CardList;","map":{"version":3,"sources":["/Users/david/Desktop/projects/final_project_weeks/what-zen-app/what-zen/src/components/CardList/index.js"],"names":["React","Component","Card","_","app","CardList","props","deleteCard","card","database","ref","child","key","remove","nextStage","appl","state","update","cards","on","snapshot","getData","val","values","cardsVal","keys","map","cardKey","cloned","clone","value","setState","cardNodes","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Card from '../Card';\nimport _ from 'lodash';\nimport app from 'firebase/app';\n\nclass CardList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: []\n    };\n    app.database().ref('cards').on('value', snapshot => {\n      this.getData(snapshot.val());\n    });\n  }\n\n  getData(values){\n    let cardsVal = values;\n    let cards = _(cardsVal)\n      .keys()\n      .map(cardKey => {\n        let cloned = _.clone(cardsVal[cardKey]);\n        cloned.key = cardKey;\n        return cloned\n        ;\n      })\n      .value();\n    this.setState({\n      cards: cards\n    });\n  }\n\n  deleteCard = (card)=> {\n    app.database().ref('cards').child(card.key).remove()\n  }\n\n  nextStage = (card)=> {\n    let appl = app.database().ref('cards')\n    if (card.state === 'To do') {\n      appl.child(card.key).update({\n        state: 'Doing'\n      }) } else {\n        appl.child(card.key).update({\n          state: 'Done'\n        });\n      };\n  };\n\n  render(){\n    let cardNodes = this.state.cards.map((card) => {\n      if (card.state === this.props.state) {\n        return (\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <Card card = {card.title}/>\n              { ( card.state !== 'Done' ) ?\n                <button value={card} onClick={()=>this.nextStage(card)}>Next Stage</button>\n                  : null\n              } <button value={card} onClick={()=>this.deleteCard(card)}>Delete</button>\n            </div>\n          </div>\n        )\n      } return null\n    })\n    return (\n      <div>\n        <div> {this.props.state} </div>\n        {cardNodes}\n      </div>\n    )\n  }\n}\n\nexport default CardList\n"]},"metadata":{},"sourceType":"module"}